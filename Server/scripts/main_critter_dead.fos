

void main_critter_dead( Critter& cr, Critter@ killer )
{
    Map@ map = cr.GetMap();
	
	// Logger:
	string[] params = {
		""+cr.Id, 
		cr.Name, 
		valid(killer) ? ""+killer.Id : "0", 
		valid(killer) ? killer.Name : "null", 
		valid (map) ? ""+map.Id : "0",
		valid (map) ? ""+map.GetProtoId() : "0"
	};
	AddLog(LOG_TYPE_CRITTER_DEAD, params);
	
    // Move inventory items to ground
    if( ( cr.Anim2Dead == ANIM2_DEAD_PULSE_DUST || cr.Anim2Dead == ANIM2_DEAD_EXPLODE ) && _CritCanDropItemsOnDead( cr ) )
    {
        // Drop all, exclude armor
        Item@[] items;
        cr.GetItems( SLOT_INV, items );
        cr.GetItems( SLOT_HAND1, items );
        cr.GetItems( SLOT_HAND2, items );
        if( valid( map ) )
        {
            // Disable drop of hidden items
            for( uint i = 0, j = items.length(); i < j; i++ )
            {
                if( FLAG( items[ i ].Flags, ITEM_GAG ) )
                {
                    Item@ item = items[ i ];
                    if( valid( item ) )
                        DeleteItem( item );
                    @items[ i ] = null;
                }
                else if( FLAG( items[ i ].Flags, ITEM_HIDDEN ) )
                    @items[ i ] = null;
            }
            MoveItems( items, map, cr.HexX, cr.HexY );
        }
        else
            DeleteItems( items );
    }

    // Mob drops
    uint16 npcPid = cr.GetProtoId();
    uint16 dropPid = 0;
    switch( npcPid )
    {
    case NPC_PID_GoldenGecko:
    case NPC_PID_ToughGoldenGecko:
        if( valid( killer ) && killer.Perk[ PE_GECKO_SKINNING ] != 0 )
            dropPid = PID_GOLDEN_GECKO_PELT;
        break;
    case NPC_PID_SmallSilverGecko:
    case NPC_PID_ToughSilverGecko:
        if( valid( killer ) && killer.Perk[ PE_GECKO_SKINNING ] != 0 )
            dropPid = PID_GECKO_PELT;
        break;
    case NPC_PID_SmallRadscorpion:
    case NPC_PID_SmallRadscorpion2:
    case NPC_PID_LargeRadscorpion:
    case NPC_PID_LargeRadscorpion2:
    case NPC_PID_LargeRadscorpion3:
        dropPid = PID_SCORPION_TAIL;
        break;
    case NPC_PID_Brahmin:
    case NPC_PID_Brahmin2:
    case NPC_PID_Brahmin3:
    case NPC_PID_WeakBrahmin:
    case NPC_PID_WildBrahmin:
        if( valid( killer ) && killer.Perk[ PE_GECKO_SKINNING ] != 0 )
            dropPid = PID_BRAHMIN_SKIN;
        break;
    case NPC_PID_GiantBeetle:
    case NPC_PID_GiantBeetle_2:
        if( Random( 1, 3 ) == 3 )
            dropPid = PID_RADSCORPION_PARTS;
        break;
    }
    if( dropPid != 0 && _CritCountItem( cr, dropPid ) == 0 )
        _CritAddItem( cr, dropPid, 1 );

    // Karma, temporary
    if( valid( killer ) && killer.IsPlayer() )
    {
        int  karmaBefore = killer.StatBase[ ST_KARMA ];
        uint team = cr.Stat[ ST_TEAM_ID ];
        // if(team==TEAM_Player) killer.StatBase[ST_KARMA]-=10;
        if( team == TEAM_Poorman )
            killer.StatBase[ ST_KARMA ] -= 10;
        else if( team == TEAM_Narcoman )
            killer.StatBase[ ST_KARMA ] += 10;
        else if( team == TEAM_Citizen )
            killer.StatBase[ ST_KARMA ] -= 10;
        else if( team == TEAM_Guard )
            killer.StatBase[ ST_KARMA ] -= 10;
        else if( team == TEAM_PrivateGuard )
            killer.StatBase[ ST_KARMA ] -= 10;
        else if( team == TEAM_Trader )
            killer.StatBase[ ST_KARMA ] -= 10;
        else if( team == TEAM_Bandit )
            killer.StatBase[ ST_KARMA ] += 10;
        else if( team == TEAM_CasinoPlayer )
            killer.StatBase[ ST_KARMA ] -= 10;
        else if( team == TEAM_CityElite )
            killer.StatBase[ ST_KARMA ] -= 30;
        else if( team == TEAM_QuestNpc )
            killer.StatBase[ ST_KARMA ] -= 30;
        else if( team == TEAM_Police )
            killer.StatBase[ ST_KARMA ] -= 10;
        else if( team == TEAM_Slaver )
            killer.StatBase[ ST_KARMA ] += 10;
        else if( team == TEAM_Slave )
            killer.StatBase[ ST_KARMA ] -= 10;
        else if( team == TEAM_Trapper )
            killer.StatBase[ ST_KARMA ] -= 10;

        if( cr.Stat[ ST_BODY_TYPE ] == BT_CHILDREN )
            killer.KarmaBase[ KARMA_CHILDKILLER ]++;

        CallTownSupply( cr, killer );      // Town supply call
    }

    SetReplicationTime( cr );
    if( cr.IsNpc() )
        cr.DropPlanes();                // Delete all planes
    if( valid( map ) && cr.Mode[ MODE_NO_FLATTEN ] != 0 )
    {
        Item@ blocker = map.AddItem( cr.HexX, cr.HexY, PID_UNVISIBLE_BLOCK, 1 );
        if( valid( blocker ) )
            cr.StatBase[ ST_DEAD_BLOCKER_ID ] = blocker.Id;
    }
}